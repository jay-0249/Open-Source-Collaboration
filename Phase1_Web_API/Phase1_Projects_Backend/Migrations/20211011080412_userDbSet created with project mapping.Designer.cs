// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phase1_Projects_Backend.Models;

namespace Phase1_Projects_Backend.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20211011080412_userDbSet created with project mapping")]
    partial class userDbSetcreatedwithprojectmapping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Phase1_Projects_Backend.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechTools")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("To be Updated");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 20,
                            ContactMail = "Email10",
                            Description = "Description10",
                            Domain = "Domain10",
                            ProjectTitle = "Title10",
                            TechTools = "Technologies and Tools 10"
                        },
                        new
                        {
                            ProjectId = 21,
                            ContactMail = "Email11",
                            Description = "Description11",
                            Domain = "Domain11",
                            ProjectTitle = "Title11",
                            TechTools = "To be Updated"
                        },
                        new
                        {
                            ProjectId = 1,
                            ContactMail = "Email1",
                            Description = "Description1",
                            Domain = "Domain1",
                            ProjectTitle = "Title1",
                            TechTools = "Technologies and Tools 1"
                        },
                        new
                        {
                            ProjectId = 2,
                            ContactMail = "Email2",
                            Description = "Description2",
                            Domain = "Domain2",
                            ProjectTitle = "Title2",
                            TechTools = "To be Updated"
                        });
                });

            modelBuilder.Entity("Phase1_Projects_Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("githubProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gitlabProfile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("Phase1_Projects_Backend.Models.Project", b =>
                {
                    b.HasOne("Phase1_Projects_Backend.Models.User", null)
                        .WithMany("ProjectId")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Phase1_Projects_Backend.Models.User", b =>
                {
                    b.Navigation("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
